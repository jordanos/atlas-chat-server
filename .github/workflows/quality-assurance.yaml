name: Quality Assurance

on: [pull_request]

jobs:
  quality-assurance:
    name: Quality Assurance

    # TODO(dmu) LOW: Consider using Debian Buster (the same as docker image is based on) if it is easy to do
    runs-on: ubuntu-latest
    container: python:3.10

    services:
      # TODO(dmu) LOW: This section duplicates services already defined in `docker-compose.yml`.
      #                Is there a way to make it DRY?
      atlas-db:
        image: postgres:15.1-alpine
        env:
          POSTGRES_DB: chat
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      atlas-redis:
        image: redis:6.2.6-alpine

    steps:
      # TODO(dmu) LOW: Implement caching
      - uses: actions/checkout@v4

      - name: Install
        run: pip install -r requirements.txt

      - name: Lint
        run: make lint

      - name: Test
        run: make test
        env:
          DEBUG: "True"
          RATE_LIMIT: "True"
          MAKE_MIGRATIONS: "False"
          HOSTNAME: "localhost"
          ALLOWED_HOSTS: "localhost"
          ADMINS: "username,email"
          SECRET_KEY: "random_secret_key_insecure*1$atcx"
          DB_ENGINE: "django.db.backends.postgresql"
          DB_HOST: "atlas-db"
          DB_NAME: "chat"
          DB_USER: "postgres"
          DB_PASSWORD: "postgres"
          DB_PORT: ""
          EMAIL_BACKEND : "django.core.mail.backends.smtp.EmailBackend"
          EMAIL_HOST :  "smtp.gmail.com"
          EMAIL_HOST_USER : ""
          EMAIL_HOST_PASSWORD : ""
          EMAIL_PORT : 587
          GUNICORN_WORKERS: 1
          REDIS_HOST: 'atlas-redis'